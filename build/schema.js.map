{"version":3,"sources":["../app/schema.js"],"names":["dotenv","config","LaunchType","GraphQLObjectType","name","fields","flight_number","type","GraphQLInt","mission_name","GraphQLString","launch_year","launch_date_local","launch_success","GraphQLBoolean","rocket","RocketType","rocket_id","rocket_name","rocket_type","ApodType","copyright","date","title","url","hdurl","explanation","EventType","event_date_utc","details","links","LinkType","article","wikipedia","RootQuery","lanzamientos","GraphQLList","resolve","parents","args","axios","get","res","data","lanzamiento","parent","cohetes","cohete","id","apod","process","env","NASA_API_KEY","ultimoLanzamiento","proximoLanzamiento","eventosHistoricos","schema","GraphQLSchema","query"],"mappings":"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","sourcesContent":["import \"@babel/polyfill\";\r\nimport {\r\n  GraphQLSchema,\r\n  GraphQLObjectType,\r\n  GraphQLString,\r\n  GraphQLInt,\r\n  GraphQLBoolean,\r\n  GraphQLList\r\n} from \"graphql\";\r\nimport axios from \"axios\";\r\nimport dotenv from 'dotenv';\r\n\r\n// Reconocer archivos .env\r\ndotenv.config();\r\n/**\r\n * SpaceX models\r\n * @description Interfaces like models of launches and rockets from SpaceX API\r\n */\r\n\r\n// Launch model\r\nconst LaunchType = new GraphQLObjectType({\r\n  name: \"Lanzamientos\",\r\n  fields: () => ({\r\n    flight_number: { type: GraphQLInt },\r\n    mission_name: { type: GraphQLString },\r\n    launch_year: { type: GraphQLString },\r\n    launch_date_local: { type: GraphQLString },\r\n    launch_success: { type: GraphQLBoolean },\r\n    rocket: { type: RocketType }\r\n  })\r\n});\r\n\r\n// Rocket model\r\nconst RocketType = new GraphQLObjectType({\r\n  name: \"Cohetes\",\r\n  fields: () => ({\r\n    rocket_id: { type: GraphQLString },\r\n    rocket_name: { type: GraphQLString },\r\n    rocket_type: { type: GraphQLString }\r\n  })\r\n});\r\n\r\n/**\r\n *  NASA models\r\n *  @description NASA objects data such as images\r\n */\r\n\r\n // Astronomy picture of the day\r\nconst ApodType = new GraphQLObjectType({\r\n    name:\"ImagenDeHoy\",\r\n    fields: () => ({\r\n        copyright: {type:GraphQLString},\r\n        date: {type: GraphQLString},\r\n        title: {type: GraphQLString},\r\n        url: {type: GraphQLString},\r\n        hdurl: {type:GraphQLString},\r\n        explanation: {type: GraphQLString}\r\n    })\r\n})\r\n\r\nconst EventType = new GraphQLObjectType({\r\n    name:\"EventosHistoricos\",\r\n    fields: () => ({\r\n      title: {type: GraphQLString},\r\n      event_date_utc: {type: GraphQLString},\r\n      flight_number: {type: GraphQLInt},\r\n      details: {type: GraphQLString},\r\n      links: {type: LinkType}\r\n    })\r\n})\r\n\r\nconst LinkType = new GraphQLObjectType({\r\n  name: \"ExternalLinks\",\r\n  fields:() => ({\r\n    article: {type: GraphQLString},\r\n    wikipedia: {type: GraphQLString}\r\n  })\r\n})\r\n\r\n// Root Query\r\nconst RootQuery = new GraphQLObjectType({\r\n  name: \"RootQueryType\",\r\n  fields: {\r\n    lanzamientos: {\r\n      type: new GraphQLList(LaunchType),\r\n      async resolve(parents, args) {\r\n        const res = await axios\r\n          .get(`https://api.spacexdata.com/v3/launches`);\r\n        return res.data;\r\n      }\r\n    },\r\n    lanzamiento: {\r\n      type: LaunchType,\r\n      args: {\r\n        flight_number: { type: GraphQLInt }\r\n      },\r\n      async resolve(parent, args) {\r\n        const res = await axios\r\n          .get(`https://api.spacexdata.com/v3/launches/${args.flight_number}`);\r\n        return res.data;\r\n      }\r\n    },\r\n    cohetes: {\r\n      type: new GraphQLList(RocketType),\r\n      async resolve(parent, args) {\r\n        const res = await axios\r\n          .get(\"https://api.spacexdata.com/v3/rockets\");\r\n        return res.data;\r\n      }\r\n    },\r\n    cohete: {\r\n      type: RocketType,\r\n      args: {\r\n        id: { type: GraphQLInt }\r\n      },\r\n      async resolve(parent, args) {\r\n        const res = await axios\r\n          .get(`https://api.spacexdata.com/v3/rockets/${args.id}`);\r\n        return res.data;\r\n      }\r\n    },\r\n    apod: {\r\n        type: ApodType,\r\n        async resolve(parents, args) {\r\n            try {\r\n            const res = await axios\r\n              .get(`https://api.nasa.gov/planetary/apod?api_key=${process.env.NASA_API_KEY}&hd=true`);\r\n            return res.data;\r\n          }\r\n          catch (err) {\r\n            return \"Hubo un error extrayendo la imagen del dia: \"+err;\r\n          }\r\n        }\r\n    },\r\n    ultimoLanzamiento: {\r\n      type: LaunchType,\r\n      async resolve(parent, args) {\r\n        const res = await axios\r\n          .get(`https://api.spacexdata.com/v3/launches/latest`);\r\n        return res.data;\r\n      }\r\n    },\r\n    proximoLanzamiento:{\r\n      type: LaunchType,\r\n      async resolve(parent, args) {\r\n        const res = await axios\r\n          .get(`https://api.spacexdata.com/v3/launches/next`);\r\n        return res.data;\r\n      }\r\n    },\r\n    eventosHistoricos: {\r\n      type:new GraphQLList(EventType),\r\n      async resolve (parents, args) {\r\n        try {\r\n          const res = await axios\r\n            .get(`https://api.spacexdata.com/v3/history?sort=event_date_utc&order=desc`);\r\n          return res.data\r\n        }\r\n        catch (err) {\r\n          return \"Whoops, it seems there was an error at Graph server. Error: \" + err;\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const schema = new GraphQLSchema({\r\n  query: RootQuery\r\n});\r\n"],"file":"schema.js"}